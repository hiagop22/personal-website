name: 'Terraform Plan'

on:
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  
jobs:
  build_angular:
    uses: ./.github/workflows/build-angular.yaml

  terraform_plan:
    name: 'Terraform Plan'
    needs: build_angular
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infrastructure

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Download Angular build
      uses: actions/download-artifact@v4
      with:
        name: angular-build
        path: website/dist

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.11.1

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan

    - name: Add Plan Comment
      if: steps.plan.outcome == 'success'
      uses: actions/github-script@v6
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Post Plan Failure 
      if: steps.plan.outcome == 'failure'
      uses: actions/github-script@v6
      env:
        PLAN_FAIL: "terraform\n${{ steps.plan.outputs.stderr }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
          <details><summary>Show Plan Error</summary>
          
          \`\`\`${process.env.PLAN_FAIL}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  clean_up:
    uses: ./.github/workflows/clean-up.yaml
    needs: [build_angular, terraform_plan]
    if: always()